- name: Configurar Nginx
  hosts: grupo #esto se puede configurar para que se aplique a ambas instancias
  become: true

  tasks:
    - name: Instalar Nginx
      apt: name=nginx state=present
    - name: Iniciar servicio de Nginx
      shell: service nginx start
    - name: Configurar archivo de Nginx
      copy:
        src: nginx.conf
        dest: /etc/nginx/nginx.conf
      notify: reiniciar servicio de Nginx

  handlers:
    - name: reiniciar servicio de Nginx
      systemd: name=nginx state=restarted

  - name: Crear archivo nginx.conf
  template:
    src: nginx.conf.plantilla
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - Reiniciar servicio Nginx

  - name: Balancear cargas 1
    docker_container:
      build: .
      image: ws-1-1
      ports:
      - "3001:3001"

  - name: Balancear cargas 2
    docker_container:
      build: .
      image: ws-1-2
      ports:
      - "3001:3001"
      
  - name: Balancear cargas 3
    docker_container:
      build: .
      image: ws-2-1
      ports:
      - "3002:3001"

  - name: Balancear cargas 4
    docker_container:
      build: .
      image: ws-2-2
      ports:
      - "3003:3001"

#Si no funciona lo anterior para balancear se puede intentar el siguiente en base a los plantillas de 
#nginx y compose
#  vars:
 #   app_image: your_app_image
#
 # tasks:
  #  - name: Copy docker-compose.yml
   #   template:
    #    src: docker-compose.yml.j2
     #   dest: /path/to/docker-compose.yml
      #  mode: '0644'
#
 #   - name: Copy nginx.conf
  #    template:
   #     src: nginx.conf.j2
    #    dest: /path/to/nginx.conf
     #   mode: '0644'
#
 #   - name: Start Docker Compose
  #    command: docker-compose up -d
   #   args:
    #    chdir: /path/to/docker-compose/



  